{"version":3,"file":"static/js/450.704ae219.chunk.js","mappings":"8LAEaA,EAAS,WASlB,OACC,SAAC,KAAD,CACGC,MATU,CACVC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,yBAMXC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,GAGhB,C,oICyBD,UAxCgB,WACd,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAMC,GAAN,yFAEjBL,GAAa,GAFI,UAGSM,EAAAA,EAAAA,IAAmBD,GAH5B,gBAGTE,EAHS,EAGTA,QAERX,EAAUW,GALO,gDAOjBT,EAAS,KAAMU,SACfC,EAAAA,GAAAA,MAAY,KAAMD,SARD,yBAUjBR,GAAa,GAVI,4EAAH,sDAalBI,EAAaH,EACd,GAAE,CAACA,KAGF,gCACGJ,IAAS,2BAAK,gCAA8BA,MAC7C,wBACGF,EAAOe,KAAI,SAAAC,GAAI,OACd,2BACE,uBAAIA,EAAKC,UACT,cAAGC,wBAAyB,CAAEC,OAAQH,EAAKI,aAFpCJ,EAAKK,GADA,MAOjBjB,IAAa,SAAC,IAAD,MAGnB,C,mMC1CKkB,EAAW,+BACXC,EAAS,UAAMD,EAAN,uBACTE,EAAU,UAAMF,EAAN,iBAIVG,EAAS,CACbA,OAAQ,CACNC,QAJY,mCAKZC,SAAU,UAIDC,EAAmB,mCAAG,sGACVC,EAAAA,EAAAA,IAAA,UAAaN,GAAaE,GADhB,uBACzBK,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAKnBC,EAAgB,mCAAG,WAAMC,GAAN,gFAC9BP,EAAOA,OAAOQ,MAAQD,EADQ,SAGPH,EAAAA,EAAAA,IAAA,UAAaL,GAAcC,GAHpB,uBAGtBK,EAHsB,EAGtBA,KAHsB,kBAIvBA,GAJuB,2CAAH,sDAOhBI,EAAc,mCAAG,WAAM5B,GAAN,yFACLuB,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BhB,GAAWmB,GADrC,uBACpBK,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdK,EAAsB,mCAAG,WAAM7B,GAAN,yFACbuB,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BhB,EAA/B,YAAkDmB,GADrC,uBAC5BK,EAD4B,EAC5BA,KAD4B,kBAE7BA,GAF6B,2CAAH,sDAKtBnB,EAAkB,mCAAG,WAAOL,GAAP,yFACTuB,EAAAA,EAAAA,IAAA,UAClBP,EADkB,kBACAhB,EADA,YAErBmB,GAH8B,uBACxBK,EADwB,EACxBA,KAIRM,QAAQC,IAAIP,GALoB,kBAMzBA,GANyB,2CAAH,qD","sources":["components/Loader/loader.jsx","components/Reviews/reviews.jsx","services/api.js"],"sourcesContent":["import { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = ()=>{\n\n    const style = {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      };\n\n    return(\n     <RotatingLines\n        style={style}\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n     />\n    )\n}","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { fetchMoviesReviews } from 'services/api';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/loader';\n\nconst Reviews = () => {\n  const [review, setReview] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCredits = async reviewMovieID => {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchMoviesReviews(reviewMovieID);\n\n        setReview(results);\n      } catch (error) {\n        setError(error.message);\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCredits(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <div>Oh no! Something goes wrong: {error}</div>}\n      <ul>\n        {review.map(item => (\n          <li key={item.id}>\n            <p>{item.author}</p>\n            <p dangerouslySetInnerHTML={{ __html: item.content }}></p>\n          </li>\n        ))}\n      </ul>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/day`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\n\nconst API_KEY = '0e23dada61404c0bafe5f107d6150751';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`${TREND_URL}`, params);\n  return data;\n};\n\nexport const fetchSearchMovie = async queryString => {\n  params.params.query = queryString;\n\n  const { data } = await axios.get(`${SEARCH_URL}`, params);\n  return data;\n};\n\nexport const fetchMovieBiId = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}`, params);\n  return data;\n};\n\nexport const fetchMoviemovieCredits = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, params);\n  return data;\n};\n\nexport const fetchMoviesReviews = async (movieId) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews`,\n    params\n  );\n  console.log(data)\n  return data;\n};\n\n\n"],"names":["Loader","style","position","top","left","transform","strokeColor","strokeWidth","animationDuration","width","visible","useState","review","setReview","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","fetchCredits","reviewMovieID","fetchMoviesReviews","results","message","toast","map","item","author","dangerouslySetInnerHTML","__html","content","id","BASE_URL","TREND_URL","SEARCH_URL","params","api_key","language","fetchTrendingMovies","axios","data","fetchSearchMovie","queryString","query","fetchMovieBiId","fetchMoviemovieCredits","console","log"],"sourceRoot":""}