{"version":3,"file":"static/js/6.2584d0dc.chunk.js","mappings":"4PAwCA,UAjCa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,sGAEtBF,GAAY,GAFU,UAGIG,EAAAA,EAAAA,MAHJ,gBAGdC,EAHc,EAGdA,QAERR,EAAUQ,GALY,gDAOtBN,EAAS,KAAMO,SACfC,EAAAA,GAAAA,MAAY,KAAMD,SARI,yBAUtBL,GAAY,GAVU,4EAAH,qDAavBE,GACD,GAAE,KAGD,iCACE,UAAC,IAAD,WACGL,IAAS,2BAAK,+BAA6BA,KAC3CF,EAAOY,OAAS,IAAK,SAAC,IAAD,CAAYC,WAAYb,OAE/CI,IAAY,SAAC,IAAD,MAGlB,C,sECpCYU,E,QAAeC,GAAAA,IAAH,0E,8ECAZC,EAAS,WASlB,OACC,SAAC,KAAD,CACGC,MATU,CACVC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,yBAMXC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,GAGhB,C,wFChBYC,EAAa,SAAC,GAAgB,IAAfd,EAAc,EAAdA,WAClBe,GAAWC,EAAAA,EAAAA,MAEjB,OACI,wBACKhB,EAAWiB,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAN,OACZ,yBACA,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAACC,KAAMP,GAAzC,SAAqDI,KAD5CD,EADG,KAO3B,C,mMCfKK,EAAW,+BACXC,EAAS,UAAMD,EAAN,uBACTE,EAAU,UAAMF,EAAN,iBAIVG,EAAS,CACbA,OAAQ,CACNC,QAJY,mCAKZC,SAAU,UAIDjC,EAAmB,mCAAG,sGACVkC,EAAAA,EAAAA,IAAA,UAAaL,GAAaE,GADhB,uBACzBI,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAKnBC,EAAgB,mCAAG,WAAMC,GAAN,gFAC9BN,EAAOA,OAAOO,MAAQD,EADQ,SAGPH,EAAAA,EAAAA,IAAA,UAAaJ,GAAcC,GAHpB,uBAGtBI,EAHsB,EAGtBA,KAHsB,kBAIvBA,GAJuB,2CAAH,sDAOhBI,EAAc,mCAAG,WAAMC,GAAN,yFACLN,EAAAA,EAAAA,IAAA,UAAaN,EAAb,kBAA+BY,GAAWT,GADrC,uBACpBI,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdM,EAAsB,mCAAG,WAAMD,GAAN,yFACbN,EAAAA,EAAAA,IAAA,UAAaN,EAAb,kBAA+BY,EAA/B,YAAkDT,GADrC,uBAC5BI,EAD4B,EAC5BA,KAD4B,kBAE7BA,GAF6B,2CAAH,sDAKtBO,EAAkB,mCAAG,WAAOF,GAAP,yFACTN,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAY,EADA,YAErBT,GAH8B,uBACxBI,EADwB,EACxBA,KAIRQ,QAAQC,IAAIT,GALoB,kBAMzBA,GANyB,2CAAH,qD","sources":["Pages/Home.jsx","Pages/page.styled.jsx","components/Loader/loader.jsx","components/MoviesList/moviesList.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'services/api';\nimport { toast } from 'react-toastify';\nimport { MoviesList } from 'components/MoviesList/moviesList';\nimport { Loader } from 'components/Loader/loader';\nimport { ContainerCss } from './page.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isloader, setIsloader] = useState(false);\n\n  useEffect(() => {\n    const handleFetchMovies = async () => {\n      try {\n        setIsloader(true);\n        const { results } = await fetchTrendingMovies();\n\n        setMovies(results);\n      } catch (error) {\n        setError(error.message);\n        toast.error(error.message);\n      } finally {\n        setIsloader(false);\n      }\n    };\n    handleFetchMovies();\n  }, []);\n\n  return (\n    <>\n      <ContainerCss>\n        {error && <duv>Oh no! Something does wron: {error}</duv>}\n        {movies.length > 0 && <MoviesList moviesList={movies} />}\n      </ContainerCss>\n      {isloader && <Loader />}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const ContainerCss = styled.div`\n    padding-left: 20px;\n    padding-right: 20px;\n`","import { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = ()=>{\n\n    const style = {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      };\n\n    return(\n     <RotatingLines\n        style={style}\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n     />\n    )\n}","import { Link, useLocation } from \"react-router-dom\";\n\n// import PropTypes  from \"prop-types\";\n\n\nexport const MoviesList = ({moviesList})=>{\n    const location = useLocation();\n\n    return(\n        <ul>\n            {moviesList.map(({id, title})=>(\n                <li key={id}>\n                <Link to={`/movies/${id}`} state={{from: location}}>{title}</Link>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\n// MoviesList.PropTypes = {\n//     movies: PropTypes.arrayOf(\n//         PropTypes.shape({\n//     title: PropTypes.string,\n//     id: PropTypes.number.isRequired,\n//    })\n//   ).isRequired,\n// }\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/day`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\n\nconst API_KEY = '0e23dada61404c0bafe5f107d6150751';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`${TREND_URL}`, params);\n  return data;\n};\n\nexport const fetchSearchMovie = async queryString => {\n  params.params.query = queryString;\n\n  const { data } = await axios.get(`${SEARCH_URL}`, params);\n  return data;\n};\n\nexport const fetchMovieBiId = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}`, params);\n  return data;\n};\n\nexport const fetchMoviemovieCredits = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, params);\n  return data;\n};\n\nexport const fetchMoviesReviews = async (movieId) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews`,\n    params\n  );\n  console.log(data)\n  return data;\n};\n\n\n"],"names":["useState","movies","setMovies","error","setError","isloader","setIsloader","useEffect","handleFetchMovies","fetchTrendingMovies","results","message","toast","length","moviesList","ContainerCss","styled","Loader","style","position","top","left","transform","strokeColor","strokeWidth","animationDuration","width","visible","MoviesList","location","useLocation","map","id","title","to","state","from","BASE_URL","TREND_URL","SEARCH_URL","params","api_key","language","axios","data","fetchSearchMovie","queryString","query","fetchMovieBiId","movieId","fetchMoviemovieCredits","fetchMoviesReviews","console","log"],"sourceRoot":""}