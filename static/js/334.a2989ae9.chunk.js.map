{"version":3,"file":"static/js/334.a2989ae9.chunk.js","mappings":"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","sources":["components/SearchForm/searchFormStyled.jsx","components/SearchForm/searchForm.jsx","Pages/Movies.jsx","Pages/page.styled.jsx","components/MoviesList/moviesListStyled.jsx","components/MoviesList/moviesList.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionCss = styled.header`\n  padding-top: 20px;\n  padding-bottom: 50px;\n`;\n\nexport const SearchFormCss = styled.form`\n  /* display: flex;\n  align-items: center;\n  justify-content: start;\n  padding: 20px 0 20px 0;\n  background: linear-gradient(#f4f4f2cc, rgba(30, 30, 30, 0.6));\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); */\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  margin: 20px;\n  gap: 10px;\n  position: relative;\n`;\n\nexport const SearchInputCss = styled.input`\n  display: inline-block;\n  color: #1d0533;\n  width: 100%;\n  height: 30px;\n  font: inherit;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  padding: 8px;\n  border: 1px solid #5cabf5;\n  border-radius: 4px;\n  transition: border-color 0.3s, box-shadow 0.3s;\n\n  &::placeholder {\n    font: inherit;\n    color: #cccccc;\n  }\n\n  @media (min-width: 1200px) {\n    width: 300px;\n  }\n`;\n\nexport const SearchButtonCss = styled.button`\n  position: absolute;\n  top: 0;\n  left: 50%;\n  display: inline-block;\n  width: 80px;\n  height: 48px;\n  border: 1px solid #935bcb;\n  /* border-radius: 4px; */\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n\n  background-color: #5cabf5;\n  color: #fff;\n  font: inherit;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  font-family: inherit;\n  font-size: 20px;\n\n  &:hover {\n    background-color: #935bcb;\n    color: #b0d6f9;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  SectionCss,\n  SearchFormCss,\n  SearchInputCss,\n  SearchButtonCss,\n} from './searchFormStyled';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const SearchForm = ({ fetchData }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const getSearchTerm = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleClick = () => {\n    if (inputValue === '') {\n      toast.error(\n        'The search form cannot be empty. Please type any criteria in the search form.'\n      );\n    } else {\n      setInputValue(inputValue);\n      fetchData(inputValue);\n    }\n  };\n\n  const handleKeyPressed = e => {\n    if (e.key === 'Enter') {\n      handleClick();\n    }\n  };\n\n  return (\n    <>\n      <SectionCss>\n        <SearchFormCss onKeyDown={handleKeyPressed}>\n          <SearchButtonCss type=\"button\" onClick={handleClick}>\n            <span>Search</span>\n          </SearchButtonCss>\n\n          <SearchInputCss\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            onChange={getSearchTerm}\n          />\n        </SearchFormCss>\n      </SectionCss>\n      <ToastContainer />\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { fetchSearchMovie } from 'services/api';\nimport { toast } from 'react-toastify';\nimport { SearchForm } from 'components/SearchForm/searchForm';\nimport { MoviesList } from 'components/MoviesList/moviesList';\nimport { ContainerCss } from './page.styled';\n\nconst Movies = () => {\n  const [error, setError] = useState(null);\n  const [searchMovies, setSearchMovies] = useState([]);\n\n  const fetchData = async queryString => {\n    try {\n      const { results } = await fetchSearchMovie(queryString);\n\n      setSearchMovies(results);\n    } catch (error) {\n      setError(error.message);\n      toast.error(error.message);\n    }\n  };\n\n  return (\n    <>\n      <ContainerCss>\n        <SearchForm searchMovies={searchMovies} fetchData={fetchData} />\n        {error && <duv>Oh no! Something does wron: {error}</duv>}\n        {searchMovies.length > 0 && <MoviesList moviesList={searchMovies} />}\n      </ContainerCss>\n    </>\n  );\n};\n\nexport  default Movies;\n","import styled from 'styled-components';\n\nexport const ContainerCss = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\n/* general*/\n\nexport const HomeContainer = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const TextError = styled.p`\n  font-size: 25px;\n  text-align: center;\n  margin-bottom: 20px;\n  margin-top: 20px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 120px;\n  height: 48px;\n  border: 1px solid #935bcb;\n  border-radius: 30px;\n  background-color: #39086a;\n  color: #fff;\n  font: inherit;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  font-family: inherit;\n  font-size: 20px;\n  margin: 10px 0;\n\n  &:hover {\n    background-color: #935bcb;\n    color: #fff;\n  }\n`;\n\n/*home #5cabf5;*/\n\nexport const TrendingTitle = styled.h1`\n  font-size: 2rem;\n  color: #021c35;\n  font-weight: 700;\n  margin: 1rem 0;\n  display: block;\n  text-transform: uppercase;\n  text-align: center;\n`;\n\n/*movie details*/\n\nexport const Wrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px 20px 20px;\n`;\n\nexport const MovieCard = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Poster = styled.img`\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  align-self: flex-start;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: flex-start;\n  padding: 10px 20px;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 10px;\n  font-size: 2rem;\n  font-weight: 700;\n`;\n\nexport const Header = styled.h3`\n  margin: 15px 0 5px 0;\n  font-size: 1.5rem;\n  font-weight: 500;\n`;\n\nexport const TextData = styled.span`\n  margin: 5px 0;\n  font-size: 1rem;\n  font-weight: 400;\n  text-align: justify;\n`;\n","import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  gap: 15px;\n  display: flex;\n  position: relative;\n  padding: 10px;\n  list-style: none;\n`;\n\nexport const Items = styled.li`\n  position: relative;\n  cursor: pointer;\n  text-decoration: none;\n  flex-basis: calc((100% - 3 * 16px) / 4);\n  border-radius: 5px;\n  transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const MovieCardImg = styled.img`\n  width: 300px;\n  height: 400px;\n  border-radius: 5px;\n`;\n\nexport const MovieCardInfo = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-bottom: 12px;\n  width: 200px;\n`;\n\nexport const MovieCardTitle = styled.p`\n  font-family: 'Roboto Medium', sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.15;\n  text-transform: uppercase;\n  color: #ffffff;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  MovieList,\n  MovieCardImg,\n  Items,\n  MovieCardInfo,\n  MovieCardTitle,\n} from './moviesListStyled';\n\nexport const MoviesList = ({ moviesList }) => {\n  const location = useLocation();\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <MovieList>\n      {moviesList.map(({ id, poster_path, title }) => (\n        <Items key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <MovieCardImg\n              src={BASE_IMG_URL + poster_path}\n              alt={title}\n              width=\"200px\"\n              height=\"300px\"\n            />\n            <MovieCardInfo>\n              <MovieCardTitle>{title}</MovieCardTitle>\n            </MovieCardInfo>\n          </Link>\n        </Items>\n      ))}\n    </MovieList>\n  );\n};\n\n// MoviesList.PropTypes = {\n//     movies: PropTypes.arrayOf(\n//         PropTypes.shape({\n//     title: PropTypes.string,\n//     id: PropTypes.number.isRequired,\n//    })\n//   ).isRequired,\n// }\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/day`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\n\nconst API_KEY = '0e23dada61404c0bafe5f107d6150751';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`${TREND_URL}`, params);\n  return data;\n};\n\nexport const fetchSearchMovie = async queryString => {\n  params.params.query = queryString;\n\n  const { data } = await axios.get(`${SEARCH_URL}`, params);\n  return data;\n};\n\nexport const fetchMovieBiId = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}`, params);\n  return data;\n};\n\nexport const fetchMoviemovieCredits = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, params);\n  return data;\n};\n\nexport const fetchMoviesReviews = async (movieId) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews`,\n    params\n  );\n  console.log(data)\n  return data;\n};\n\n\n"],"names":["SectionCss","styled","SearchFormCss","SearchInputCss","SearchButtonCss","SearchForm","fetchData","useState","inputValue","setInputValue","handleClick","toast","onKeyDown","e","key","type","onClick","autoComplete","autoFocus","placeholder","onChange","target","value","error","setError","searchMovies","setSearchMovies","queryString","fetchSearchMovie","results","message","length","moviesList","ContainerCss","TextError","TrendingTitle","MovieList","Items","MovieCardImg","MovieCardInfo","MovieCardTitle","MoviesList","location","useLocation","map","id","poster_path","title","to","state","from","src","alt","width","height","BASE_URL","TREND_URL","SEARCH_URL","params","api_key","language","fetchTrendingMovies","axios","data","query","fetchMovieBiId","movieId","fetchMoviemovieCredits","fetchMoviesReviews","console","log"],"sourceRoot":""}