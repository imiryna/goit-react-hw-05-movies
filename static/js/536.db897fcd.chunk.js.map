{"version":3,"file":"static/js/536.db897fcd.chunk.js","mappings":"wSAEaA,EAAOC,EAAAA,GAAAA,GAAH,iIAOJC,EAAOD,EAAAA,GAAAA,GAAH,oF,SCkDjB,EApDa,WACX,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAKQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAMC,GAAN,yFAEjBL,GAAa,GAFI,UAGMM,EAAAA,EAAAA,IAAuBD,GAH7B,gBAGTV,EAHS,EAGTA,KAERC,EAAQD,GALS,gDAOjBG,EAAS,KAAMS,SACfC,EAAAA,GAAAA,MAAY,KAAMD,SARD,yBAUjBP,GAAa,GAVI,4EAAH,sDAalBI,EAAaH,EACd,GAAE,CAACA,KAKF,gCACGJ,IAAS,2BAAK,+BAA6BA,MAC5C,SAACN,EAAD,UACGI,EAAKc,KAAI,SAAAC,GAAI,OACZ,UAACjB,EAAD,YACE,gBACEkB,IA/BS,kCA+BWD,EAAKE,aACzBC,MAAM,QACNC,OAAO,QACPC,IAAKL,EAAKM,QAEZ,uBAAIN,EAAKM,QACT,yBAAG,cAAYN,EAAKO,cACpB,oBAVU,MAcflB,IAAa,SAAC,IAAD,MAGnB,C,8ECvDYmB,EAAS,WASlB,OACC,SAAC,KAAD,CACGC,MATU,CACVC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,yBAMXC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBb,MAAM,KACNc,SAAS,GAGhB,C,mMCnBKC,EAAW,+BACXC,EAAS,UAAMD,EAAN,uBACTE,EAAU,UAAMF,EAAN,iBAIVG,EAAS,CACbA,OAAQ,CACNC,QAJY,mCAKZC,SAAU,UAIDC,EAAmB,mCAAG,sGACVC,EAAAA,EAAAA,IAAA,UAAaN,GAAaE,GADhB,uBACzBK,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAKnBC,EAAgB,mCAAG,WAAMC,GAAN,gFAC9BP,EAAOA,OAAOQ,MAAQD,EADQ,SAGPH,EAAAA,EAAAA,IAAA,UAAaL,GAAcC,GAHpB,uBAGtBK,EAHsB,EAGtBA,KAHsB,kBAIvBA,GAJuB,2CAAH,sDAOhBI,EAAc,mCAAG,WAAMvC,GAAN,yFACLkC,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+B3B,GAAW8B,GADrC,uBACpBK,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKd9B,EAAsB,mCAAG,WAAML,GAAN,yFACbkC,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+B3B,EAA/B,YAAkD8B,GADrC,uBAC5BK,EAD4B,EAC5BA,KAD4B,kBAE7BA,GAF6B,2CAAH,sDAKtBK,EAAkB,mCAAG,WAAOxC,GAAP,yFACTkC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,kBACA3B,EADA,YAErB8B,GAH8B,uBACxBK,EADwB,EACxBA,KAIRM,QAAQC,IAAIP,GALoB,kBAMzBA,GANyB,2CAAH,qD","sources":["components/Cast/cast.styled.jsx","components/Cast/cast.jsx","components/Loader/loader.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  list-style: none;\n  grid-template-columns: repeat(5, 1fr);\n  margin-bottom: 20px;\n`;\n\nexport const Item = styled.li`\n  margin-top: 20px;\n  img {\n    border-radius: 5px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { fetchMoviemovieCredits } from 'services/api';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/loader';\nimport { List, Item } from './cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\n  // get the movie ID from the path\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCredits = async castMovieID => {\n      try {\n        setIsLoading(true);\n        const { cast } = await fetchMoviemovieCredits(castMovieID);\n\n        setCast(cast);\n      } catch (error) {\n        setError(error.message);\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCredits(movieId);\n  }, [movieId]);\n\n  //   const {character, name, profile_path}\n\n  return (\n    <>\n      {error && <div>Oh no! Something does wron: {error}</div>}\n      <List>\n        {cast.map(item => (\n          <Item>\n            <img\n              src={BASE_IMG_URL + item.profile_path}\n              width=\"200px\"\n              height=\"300px\"\n              alt={item.name}\n            />\n            <p>{item.name}</p>\n            <p>Character: {item.character}</p>\n            <hr />\n          </Item>\n        ))}\n      </List>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Cast;\n","import { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = ()=>{\n\n    const style = {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      };\n\n    return(\n     <RotatingLines\n        style={style}\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n     />\n    )\n}","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/day`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\n\nconst API_KEY = '0e23dada61404c0bafe5f107d6150751';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`${TREND_URL}`, params);\n  return data;\n};\n\nexport const fetchSearchMovie = async queryString => {\n  params.params.query = queryString;\n\n  const { data } = await axios.get(`${SEARCH_URL}`, params);\n  return data;\n};\n\nexport const fetchMovieBiId = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}`, params);\n  return data;\n};\n\nexport const fetchMoviemovieCredits = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, params);\n  return data;\n};\n\nexport const fetchMoviesReviews = async (movieId) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews`,\n    params\n  );\n  console.log(data)\n  return data;\n};\n\n\n"],"names":["List","styled","Item","useState","cast","setCast","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","fetchCredits","castMovieID","fetchMoviemovieCredits","message","toast","map","item","src","profile_path","width","height","alt","name","character","Loader","style","position","top","left","transform","strokeColor","strokeWidth","animationDuration","visible","BASE_URL","TREND_URL","SEARCH_URL","params","api_key","language","fetchTrendingMovies","axios","data","fetchSearchMovie","queryString","query","fetchMovieBiId","fetchMoviesReviews","console","log"],"sourceRoot":""}