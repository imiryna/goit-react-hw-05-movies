{"version":3,"file":"static/js/6.17141b98.chunk.js","mappings":"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","sources":["Pages/Home.jsx","Pages/page.styled.jsx","components/Loader/loader.jsx","components/MoviesList/moviesListStyled.jsx","components/MoviesList/moviesList.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'services/api';\nimport { toast } from 'react-toastify';\nimport { MoviesList } from 'components/MoviesList/moviesList';\nimport { Loader } from 'components/Loader/loader';\nimport { ContainerCss } from './page.styled';\nimport { TrendingTitle, TextError } from './page.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isloader, setIsloader] = useState(false);\n\n  useEffect(() => {\n    const handleFetchMovies = async () => {\n      try {\n        setIsloader(true);\n        const { results } = await fetchTrendingMovies();\n\n        setMovies(results);\n      } catch (error) {\n        setError(error.message);\n        toast.error(error.message);\n      } finally {\n        setIsloader(false);\n      }\n    };\n    handleFetchMovies();\n  }, []);\n\n  return (\n    <>\n      <ContainerCss>\n        <TrendingTitle>Trending movies</TrendingTitle>\n        {error && <TextError>Oh no! Something does wron: {error}</TextError>}\n        {movies.length > 0 && <MoviesList moviesList={movies} />}\n      </ContainerCss>\n      {isloader && <Loader />}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const ContainerCss = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\n/* general*/\n\nexport const HomeContainer = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const TextError = styled.p`\n  font-size: 25px;\n  text-align: center;\n  margin-bottom: 20px;\n  margin-top: 20px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 120px;\n  height: 48px;\n  border: 1px solid #935bcb;\n  border-radius: 30px;\n  background-color: #39086a;\n  color: #fff;\n  font: inherit;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  font-family: inherit;\n  font-size: 20px;\n  margin: 10px 0;\n\n  &:hover {\n    background-color: #935bcb;\n    color: #fff;\n  }\n`;\n\n/*home #5cabf5;*/\n\nexport const TrendingTitle = styled.h1`\n  font-size: 2rem;\n  color: #021c35;\n  font-weight: 700;\n  margin: 1rem 0;\n  display: block;\n  text-transform: uppercase;\n  text-align: center;\n`;\n\n/*movie details*/\n\nexport const Wrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px 20px 20px;\n`;\n\nexport const MovieCard = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Poster = styled.img`\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  align-self: flex-start;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: flex-start;\n  padding: 10px 20px;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 10px;\n  font-size: 2rem;\n  font-weight: 700;\n`;\n\nexport const Header = styled.h3`\n  margin: 15px 0 5px 0;\n  font-size: 1.5rem;\n  font-weight: 500;\n`;\n\nexport const TextData = styled.span`\n  margin: 5px 0;\n  font-size: 1rem;\n  font-weight: 400;\n  text-align: justify;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = ()=>{\n\n    const style = {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      };\n\n    return(\n     <RotatingLines\n        style={style}\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n     />\n    )\n}","import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  gap: 15px;\n  display: flex;\n  position: relative;\n  padding: 10px;\n  list-style: none;\n`;\n\nexport const Items = styled.li`\n  position: relative;\n  cursor: pointer;\n  text-decoration: none;\n  flex-basis: calc((100% - 3 * 16px) / 4);\n  border-radius: 5px;\n  transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const MovieCardImg = styled.img`\n  width: 300px;\n  height: 400px;\n  border-radius: 5px;\n`;\n\nexport const MovieCardInfo = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-bottom: 12px;\n  width: 200px;\n`;\n\nexport const MovieCardTitle = styled.p`\n  font-family: 'Roboto Medium', sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.15;\n  text-transform: uppercase;\n  color: #ffffff;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  MovieList,\n  MovieCardImg,\n  Items,\n  MovieCardInfo,\n  MovieCardTitle,\n} from './moviesListStyled';\n\nexport const MoviesList = ({ moviesList }) => {\n  const location = useLocation();\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <MovieList>\n      {moviesList.map(({ id, poster_path, title }) => (\n        <Items key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <MovieCardImg\n              src={BASE_IMG_URL + poster_path}\n              alt={title}\n              width=\"200px\"\n              height=\"300px\"\n            />\n            <MovieCardInfo>\n              <MovieCardTitle>{title}</MovieCardTitle>\n            </MovieCardInfo>\n          </Link>\n        </Items>\n      ))}\n    </MovieList>\n  );\n};\n\n// MoviesList.PropTypes = {\n//     movies: PropTypes.arrayOf(\n//         PropTypes.shape({\n//     title: PropTypes.string,\n//     id: PropTypes.number.isRequired,\n//    })\n//   ).isRequired,\n// }\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/day`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\n\nconst API_KEY = '0e23dada61404c0bafe5f107d6150751';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`${TREND_URL}`, params);\n  return data;\n};\n\nexport const fetchSearchMovie = async queryString => {\n  params.params.query = queryString;\n\n  const { data } = await axios.get(`${SEARCH_URL}`, params);\n  return data;\n};\n\nexport const fetchMovieBiId = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}`, params);\n  return data;\n};\n\nexport const fetchMoviemovieCredits = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, params);\n  return data;\n};\n\nexport const fetchMoviesReviews = async (movieId) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews`,\n    params\n  );\n  console.log(data)\n  return data;\n};\n\n\n"],"names":["useState","movies","setMovies","error","setError","isloader","setIsloader","useEffect","handleFetchMovies","fetchTrendingMovies","results","message","toast","length","moviesList","ContainerCss","styled","TextError","TrendingTitle","Loader","style","position","top","left","transform","strokeColor","strokeWidth","animationDuration","width","visible","MovieList","Items","MovieCardImg","MovieCardInfo","MovieCardTitle","MoviesList","location","useLocation","map","id","poster_path","title","to","state","from","src","alt","height","BASE_URL","TREND_URL","SEARCH_URL","params","api_key","language","axios","data","fetchSearchMovie","queryString","query","fetchMovieBiId","movieId","fetchMoviemovieCredits","fetchMoviesReviews","console","log"],"sourceRoot":""}